// <auto-generated />
using System;
using CreateDocumentAPP_2.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CreateDocumentAPP_2.Migrations
{
    [DbContext(typeof(ProjeDbContext))]
    [Migration("20250409155146_AddIlgiliGorselUrlToGereksinimNotu")]
    partial class AddIlgiliGorselUrlToGereksinimNotu
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CreateDocumentAPP_2.Entities.Model.Company", b =>
                {
                    b.Property<int>("CompanyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyID"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("KurulusTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("CompanyID");

                    b.ToTable("Sirketler");
                });

            modelBuilder.Entity("CreateDocumentAPP_2.Entities.Model.Departman", b =>
                {
                    b.Property<int>("DepartmanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmanID"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("CompanyID")
                        .HasColumnType("int");

                    b.HasKey("DepartmanID");

                    b.HasIndex("CompanyID");

                    b.ToTable("Departmanlar");
                });

            modelBuilder.Entity("CreateDocumentAPP_2.Entities.Model.FinansalBilgi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AyrilanButce")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IlgiliIs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjeID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjeID");

                    b.ToTable("FinansalBilgiler");
                });

            modelBuilder.Entity("CreateDocumentAPP_2.Entities.Model.FonksiyonelGereksinim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gereklilik")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Onem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjeID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjeID");

                    b.ToTable("FonksiyonelGereksinimler");
                });

            modelBuilder.Entity("CreateDocumentAPP_2.Entities.Model.GereksinimNotu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EklenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FonksiyonelGereksinimID")
                        .HasColumnType("int");

                    b.Property<string>("Icerik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IlgiliGorselUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeknikGereksinimID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FonksiyonelGereksinimID");

                    b.HasIndex("TeknikGereksinimID");

                    b.ToTable("GereksinimNotlari");
                });

            modelBuilder.Entity("CreateDocumentAPP_2.Entities.Model.Kullanici", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("CompanyID")
                        .HasColumnType("int");

                    b.Property<int?>("DepartmanID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("Rol")
                        .HasColumnType("int");

                    b.Property<string>("SifreHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SonGiris")
                        .HasColumnType("datetime2");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Title")
                        .HasColumnType("int");

                    b.HasKey("UserID");

                    b.HasIndex("CompanyID");

                    b.HasIndex("DepartmanID");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Kullanicilar");
                });

            modelBuilder.Entity("CreateDocumentAPP_2.Entities.Model.Proje", b =>
                {
                    b.Property<int>("ProjeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjeID"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BaslangicTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("BitisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CompanyID")
                        .HasColumnType("int");

                    b.Property<int>("Durum")
                        .HasColumnType("int");

                    b.Property<int?>("KategoriID")
                        .HasColumnType("int");

                    b.Property<int?>("OlusturanID")
                        .HasColumnType("int");

                    b.Property<string>("ProjeAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProjeID");

                    b.HasIndex("CompanyID");

                    b.HasIndex("KategoriID");

                    b.HasIndex("OlusturanID");

                    b.ToTable("Projeler");
                });

            modelBuilder.Entity("CreateDocumentAPP_2.Entities.Model.ProjeDetay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FinansalBilgiler")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProjeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("SonGuncelleme")
                        .HasColumnType("datetime2");

                    b.Property<string>("StratejikHedefler")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeknikGereksinimler")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProjeID")
                        .IsUnique();

                    b.ToTable("ProjeDetaylari");
                });

            modelBuilder.Entity("CreateDocumentAPP_2.Entities.Model.ProjeDiyagram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DiyagramAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiyagramUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjeID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjeID");

                    b.ToTable("ProjeDiyagramlari");
                });

            modelBuilder.Entity("CreateDocumentAPP_2.Entities.Model.ProjeKategori", b =>
                {
                    b.Property<int>("KategoriID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KategoriID"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KategoriID");

                    b.ToTable("ProjeKategorileri");
                });

            modelBuilder.Entity("CreateDocumentAPP_2.Entities.Model.ProjeTakim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AtanmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("KullaniciUserID")
                        .HasColumnType("int");

                    b.Property<int>("ProjeID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciUserID");

                    b.HasIndex("ProjeID");

                    b.HasIndex("UserID");

                    b.ToTable("ProjeTakimlari");
                });

            modelBuilder.Entity("CreateDocumentAPP_2.Entities.Model.TeknikGereksinim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Gereksinim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjeID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjeID");

                    b.ToTable("TeknikGereksinimler");
                });

            modelBuilder.Entity("CreateDocumentAPP_2.Entities.Model.Departman", b =>
                {
                    b.HasOne("CreateDocumentAPP_2.Entities.Model.Company", "Company")
                        .WithMany("Departmanlar")
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("CreateDocumentAPP_2.Entities.Model.FinansalBilgi", b =>
                {
                    b.HasOne("CreateDocumentAPP_2.Entities.Model.Proje", "Proje")
                        .WithMany("FinansalBilgiler")
                        .HasForeignKey("ProjeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proje");
                });

            modelBuilder.Entity("CreateDocumentAPP_2.Entities.Model.FonksiyonelGereksinim", b =>
                {
                    b.HasOne("CreateDocumentAPP_2.Entities.Model.Proje", "Proje")
                        .WithMany("FonksiyonelGereksinimler")
                        .HasForeignKey("ProjeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proje");
                });

            modelBuilder.Entity("CreateDocumentAPP_2.Entities.Model.GereksinimNotu", b =>
                {
                    b.HasOne("CreateDocumentAPP_2.Entities.Model.FonksiyonelGereksinim", "FonksiyonelGereksinim")
                        .WithMany("Notlar")
                        .HasForeignKey("FonksiyonelGereksinimID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CreateDocumentAPP_2.Entities.Model.TeknikGereksinim", "TeknikGereksinim")
                        .WithMany("Notlar")
                        .HasForeignKey("TeknikGereksinimID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("FonksiyonelGereksinim");

                    b.Navigation("TeknikGereksinim");
                });

            modelBuilder.Entity("CreateDocumentAPP_2.Entities.Model.Kullanici", b =>
                {
                    b.HasOne("CreateDocumentAPP_2.Entities.Model.Company", "Company")
                        .WithMany("Kullanicilar")
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("CreateDocumentAPP_2.Entities.Model.Departman", "Departman")
                        .WithMany("Kullanicilar")
                        .HasForeignKey("DepartmanID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Company");

                    b.Navigation("Departman");
                });

            modelBuilder.Entity("CreateDocumentAPP_2.Entities.Model.Proje", b =>
                {
                    b.HasOne("CreateDocumentAPP_2.Entities.Model.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("CreateDocumentAPP_2.Entities.Model.ProjeKategori", "Kategori")
                        .WithMany("Projeler")
                        .HasForeignKey("KategoriID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CreateDocumentAPP_2.Entities.Model.Kullanici", "Olusturan")
                        .WithMany()
                        .HasForeignKey("OlusturanID");

                    b.Navigation("Company");

                    b.Navigation("Kategori");

                    b.Navigation("Olusturan");
                });

            modelBuilder.Entity("CreateDocumentAPP_2.Entities.Model.ProjeDetay", b =>
                {
                    b.HasOne("CreateDocumentAPP_2.Entities.Model.Proje", "Proje")
                        .WithOne("ProjeDetay")
                        .HasForeignKey("CreateDocumentAPP_2.Entities.Model.ProjeDetay", "ProjeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proje");
                });

            modelBuilder.Entity("CreateDocumentAPP_2.Entities.Model.ProjeDiyagram", b =>
                {
                    b.HasOne("CreateDocumentAPP_2.Entities.Model.Proje", "Proje")
                        .WithMany("ProjeDiyagramlari")
                        .HasForeignKey("ProjeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proje");
                });

            modelBuilder.Entity("CreateDocumentAPP_2.Entities.Model.ProjeTakim", b =>
                {
                    b.HasOne("CreateDocumentAPP_2.Entities.Model.Kullanici", null)
                        .WithMany("ProjeUyelikleri")
                        .HasForeignKey("KullaniciUserID");

                    b.HasOne("CreateDocumentAPP_2.Entities.Model.Proje", "Proje")
                        .WithMany("ProjeUyeleri")
                        .HasForeignKey("ProjeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CreateDocumentAPP_2.Entities.Model.Kullanici", "Kullanici")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");

                    b.Navigation("Proje");
                });

            modelBuilder.Entity("CreateDocumentAPP_2.Entities.Model.TeknikGereksinim", b =>
                {
                    b.HasOne("CreateDocumentAPP_2.Entities.Model.Proje", "Proje")
                        .WithMany("TeknikGereksinimler")
                        .HasForeignKey("ProjeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proje");
                });

            modelBuilder.Entity("CreateDocumentAPP_2.Entities.Model.Company", b =>
                {
                    b.Navigation("Departmanlar");

                    b.Navigation("Kullanicilar");
                });

            modelBuilder.Entity("CreateDocumentAPP_2.Entities.Model.Departman", b =>
                {
                    b.Navigation("Kullanicilar");
                });

            modelBuilder.Entity("CreateDocumentAPP_2.Entities.Model.FonksiyonelGereksinim", b =>
                {
                    b.Navigation("Notlar");
                });

            modelBuilder.Entity("CreateDocumentAPP_2.Entities.Model.Kullanici", b =>
                {
                    b.Navigation("ProjeUyelikleri");
                });

            modelBuilder.Entity("CreateDocumentAPP_2.Entities.Model.Proje", b =>
                {
                    b.Navigation("FinansalBilgiler");

                    b.Navigation("FonksiyonelGereksinimler");

                    b.Navigation("ProjeDetay");

                    b.Navigation("ProjeDiyagramlari");

                    b.Navigation("ProjeUyeleri");

                    b.Navigation("TeknikGereksinimler");
                });

            modelBuilder.Entity("CreateDocumentAPP_2.Entities.Model.ProjeKategori", b =>
                {
                    b.Navigation("Projeler");
                });

            modelBuilder.Entity("CreateDocumentAPP_2.Entities.Model.TeknikGereksinim", b =>
                {
                    b.Navigation("Notlar");
                });
#pragma warning restore 612, 618
        }
    }
}
