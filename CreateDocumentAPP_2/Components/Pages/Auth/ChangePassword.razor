@page "/change-password"
@layout BaseLayout

@inject NavigationManager Navigation
@inject ProjeDbContext DbContext
@using CreateDocumentAPP_2.Entities
@using CreateDocumentAPP_2.Entities.Model

<div class="login-container">
    <div class="login-box">
        <div class="login-form">
            <h2>Şifre Değiştir</h2>
            <p>Güvenliğinizi koruyun, şifrenizi güncelleyin.</p>

            <form>
                <label for="email">E-Posta</label>
                <input type="email" id="email" placeholder="E-posta adresinizi girin" @bind="Email" required>

                <label for="old-password">Eski Şifre</label>
                <input type="password" id="old-password" placeholder="Mevcut şifrenizi girin" @bind="OldPassword" required>

                <label for="new-password">Yeni Şifre</label>
                <input type="password" id="new-password" placeholder="Yeni şifrenizi girin" @bind="NewPassword" required>

                <label for="confirm-password">Yeni Şifre (Tekrar)</label>
                <input type="password" id="confirm-password" placeholder="Yeni şifrenizi tekrar girin" @bind="ConfirmNewPassword" required>

                @if (!string.IsNullOrEmpty(ErrorMessage))
                {
                    <p class="error-message">@ErrorMessage</p>
                }

                <button type="button" class="login-btn" @onclick="ChangeUserPassword">Şifreyi Güncelle</button>
                <button type="button" class="login-btn" @onclick="BackToLogin">Girişe Dön</button>
            </form>
        </div>

        <div class="login-image">
            <img src="https://img.freepik.com/free-vector/geometric-gradient-futuristic-background_23-2149116406.jpg" alt="Change Password Background">
        </div>
    </div>
</div>

<style>
    body {
        margin: 0;
        padding: 0;
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        background-color: #798189;
    }

    .login-container {
        width: 80%;
        height: 60%;
        max-width: 1000px;
        background: white;
        border-radius: 20px;
        display: flex;
        overflow: hidden;
        box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.2);
    }

    .login-box {
        display: flex;
        width: 100%;
    }

    .login-form {
        width: 50%;
        padding: 40px;
        background: #f0f0f0;
        display: flex;
        flex-direction: column;
        justify-content: center;
    }

        .login-form h2 {
            font-size: 24px;
            margin-bottom: 5px;
        }

        .login-form p {
            font-size: 14px;
            color: #888;
        }

        .login-form label {
            font-weight: bold;
            margin-top: 15px;
            display: block;
        }

        .login-form input {
            width: 100%;
            padding: 10px;
            border-radius: 5px;
            border: 1px solid #ccc;
            margin-top: 5px;
            font-size: 14px;
        }

    .login-btn {
        width: 47%;
        padding: 12px;
        background: #007bff;
        color: white;
        border: none;
        border-radius: 5px;
        margin-top: 20px;
        font-size: 16px;
        cursor: pointer;
    }

        .login-btn:hover {
            background: #0056b3;
        }

    .error-message {
        color: red;
        font-size: 14px;
        margin-top: 10px;
    }

    .login-image {
        height: 100%;
        width: 50%;
        background: black;
        display: flex;
        justify-content: center;
        align-items: center;
    }

        .login-image img {
            width: 100%;
            height: 100%;
            border-radius: 10px;
        }
</style>

@code {
    private string Email = "";
    private string OldPassword = "";
    private string NewPassword = "";
    private string ConfirmNewPassword = "";
    private string ErrorMessage = "";

    private async Task ChangeUserPassword()
    {
        if (string.IsNullOrWhiteSpace(Email) || string.IsNullOrWhiteSpace(OldPassword) || string.IsNullOrWhiteSpace(NewPassword) || string.IsNullOrWhiteSpace(ConfirmNewPassword))
        {
            ErrorMessage = "Tüm alanları doldurmalısınız.";
            return;
        }

        if (NewPassword != ConfirmNewPassword)
        {
            ErrorMessage = "Yeni şifreler uyuşmuyor.";
            return;
        }


        var user = await DbContext.Kullanicilar.FirstOrDefaultAsync(u => u.Email == Email && u.SifreHash == OldPassword);

        if (user == null)
        {
            ErrorMessage = "E-posta veya eski şifre hatalı.";
            return;
        }

        user.SifreHash = NewPassword;
        await DbContext.SaveChangesAsync();

        Navigation.NavigateTo("/login");
    }

    private void BackToLogin()
    {
        Navigation.NavigateTo("/login");
    }
}
