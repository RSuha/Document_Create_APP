@inject NavigationManager Navigation
@inject AuthenticationService AuthService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ProjeDbContext DbContext
@using Microsoft.AspNetCore.Components.Authorization
@using CreateDocumentAPP_2.Entities.Enum
@using Microsoft.EntityFrameworkCore
@using CreateDocumentAPP_2.Entities.Model

<MudLayout>
    <MudOverlay Visible="_open" OnClick="@CloseDrawer" />

    <MudDrawer @bind-Open="_open" Elevation="1" Anchor="Anchor.Start">
        <MudDrawerHeader>
            <AuthorizeView>
                <Authorized>
                    <MudAppBar Elevation="1">
                        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@ToggleDrawer" />
                        <MudText Typo="Typo.h6">📃Document Track</MudText>
                    </MudAppBar>

                    <MudDrawerHeader Class="custom-drawer-header">
                        <div class="drawer-user-info">
                            <div class="ml-2">
                                <MudText Typo="Typo.h6" Class="user-name">@CurrentUser?.Ad @CurrentUser?.Soyad</MudText>
                                <MudText Typo="Typo.subtitle2" Class="user-role">@UserRole</MudText>
                            </div>
                        </div>
                    </MudDrawerHeader>
                </Authorized>
                <NotAuthorized>
                    <div class="ml-3">
                        <h4>Giriş Yapılmadı</h4>
                        <p>Yetkisiz Kullanıcı</p>
                    </div>
                </NotAuthorized>
            </AuthorizeView>
        </MudDrawerHeader>

        <MudNavMenu>
            @if (UserRole == KullaniciRol.Admin)
            {
                <MudNavGroup Icon="@Icons.Material.Filled.AccountTree" Title="Proje">
                    <MudNavLink Href="/default-home" Icon="@Icons.Material.Filled.Home" Match="NavLinkMatch.All">Projelerim</MudNavLink>
                    <MudNavLink Href="/new-project" Icon="@Icons.Material.Filled.AddToPhotos">Yeni Proje</MudNavLink>
                </MudNavGroup>

                <MudNavGroup Icon="@Icons.Material.Filled.AccountCircle" Title="Kullanıcı">
                    <MudNavLink Href="/user-list" Icon="@Icons.Material.Filled.Person">Kullanıcılar</MudNavLink>
                    <MudNavLink Href="/create-user" Icon="@Icons.Material.Filled.PersonAdd">Yeni Kullanıcı</MudNavLink>
                </MudNavGroup>

                <MudNavGroup Icon="@Icons.Material.Filled.PostAdd" Title="Tablo Güncellemeleri">
                    <MudNavLink Href="/assigment-list" Icon="@Icons.Material.Filled.GroupAdd">Görev Atama</MudNavLink>
                    <MudNavLink Href="/create-department" Icon="@Icons.Material.Filled.DomainAdd">Departman Ekle</MudNavLink>
                    <MudNavLink Href="/new-category" Icon="@Icons.Material.Filled.Category">Kategori Ekle</MudNavLink>
                    <MudNavLink Href="/new-diagram-category" Icon="@Icons.Material.Filled.AppRegistration">Kategori Ekle</MudNavLink>
                </MudNavGroup>
            }
            else if (UserRole == KullaniciRol.ProjeYoneticisi)
            {
                <MudNavLink Href="/default-home" Icon="@Icons.Material.Filled.Home" Match="NavLinkMatch.All">Projelerim</MudNavLink>
                <MudNavLink Href="/user-list" Icon="@Icons.Material.Filled.Person">Kullanıcılar</MudNavLink>
            }
            else if (UserRole == KullaniciRol.TakimUyesi)
            {
                <MudNavLink Href="/default-home" Icon="@Icons.Material.Filled.Home" Match="NavLinkMatch.All">Projelerim</MudNavLink>
            }

            <MudNavLink Icon="@Icons.Material.Filled.Logout" @onclick="Logout">Çıkış Yap</MudNavLink>
        </MudNavMenu>
    </MudDrawer>
</MudLayout>

<style>
    .mud-drawer-header {
        padding: 0px;
        display: block;
    }

    .custom-drawer-header {
        background-color: #f5f5f5;
        border-bottom: 1px solid #ddd;
    }

    .drawer-user-info {
        display: flex;
        align-items: center;
    }

    .user-name {
        font-weight: bold;
        color: #333;
    }

    .user-role {
        color: #666;
        font-size: 0.9rem;
    }
</style>

@code {
    private bool _open = false;
    private Kullanici? CurrentUser;
    private KullaniciRol? UserRole;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var email = authState.User.Identity?.Name;

        if (!string.IsNullOrWhiteSpace(email))
        {
            CurrentUser = await DbContext.Kullanicilar.FirstOrDefaultAsync(k => k.Email == email);
            if (CurrentUser != null)
                UserRole = CurrentUser.Rol;
        }
    }

    private void ToggleDrawer() => _open = !_open;
    private void CloseDrawer() => _open = false;

    private async Task Logout()
    {
        await AuthService.Logout();
        Navigation.NavigateTo("/login", true);
    }
}
